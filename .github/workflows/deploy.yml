name: Deploy to Google Cloud

on:
  push:
    branches:
      - main

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: asia-south1
  REPO_NAME: ppt-studio-repo

jobs:
  deploy-backend:
    name: Build and Deploy Backend
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      
      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      # ---------------------------
      # Build & Deploy API Service
      # ---------------------------
      - name: Build and Push API Image
        id: build-api-image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/ppt-studio-backend:${{ github.sha }}

      - name: Deploy API Service
        run: |
          gcloud run deploy ppt-studio-api \
            --image=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/ppt-studio-backend:${{ github.sha }} \
            --region=${{ env.GCP_REGION }} \
            --allow-unauthenticated \
            --vpc-connector=vpc-connector \
            --set-env-vars="REDIS_URL=redis://$(gcloud redis instances describe ppt-studio-redis --region=${{ env.GCP_REGION }} --format='value(host)'):6379/0" \
            --set-secrets="GOOGLE_API_KEY=gemini-api-key:latest" \
            --command="uvicorn" \
            --args="app.main:app,--host,0.0.0.0,--port,8080"

      - name: Store API URL
        run: echo "API_URL=$(gcloud run services describe ppt-studio-api --platform=managed --region=${{ env.GCP_REGION }} --format='value(status.url)')" >> $GITHUB_ENV

      # ---------------------------
      # Build & Deploy Worker Service (MODIFIED)
      # ---------------------------
      # - name: Build and Push Worker Image
      #   id: build-worker-image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: ./backend
      #     file: ./backend/Dockerfile.worker
      #     push: true
      #     tags: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/ppt-studio-worker:${{ github.sha }}

      # - name: Deploy Worker Service
      #   run: |
      #     REDIS_HOST=$(gcloud redis instances describe ppt-studio-redis --region=${{ env.GCP_REGION }} --format='value(host)')
      #     REDIS_PORT=$(gcloud redis instances describe ppt-studio-redis --region=${{ env.GCP_REGION }} --format='value(port)')
      #     REDIS_URL="redis://${REDIS_HOST}:${REDIS_PORT}/0"

      #     gcloud run deploy ppt-studio-worker \
      #       --image=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/ppt-studio-worker:${{ github.sha }} \
      #       --region=${{ env.GCP_REGION }} \
      #       --no-allow-unauthenticated \
      #       --vpc-connector=vpc-connector \
      #       --set-env-vars="REDIS_URL=$REDIS_URL" \
      #       --set-secrets="GOOGLE_API_KEY=gemini-api-key:latest" \
      #       --no-cpu-throttling \
      #       # No --command or --args needed here, as the Dockerfile's CMD will run our entrypoint script
            # ---------------------------
      
      
      
      # Build & Deploy Worker Service (DEBUGGING)
      # ---------------------------
      - name: Build and Push Worker Image
        id: build-worker-image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile.worker
          push: true
          tags: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/ppt-studio-worker:${{ github.sha }}


         #this is last working code for deployement 
      - name: Deploy Worker Service
        run: |
          REDIS_HOST=$(gcloud redis instances describe ppt-studio-redis --region=${{ env.GCP_REGION }} --format='value(host)')
          REDIS_PORT=$(gcloud redis instances describe ppt-studio-redis --region=${{ env.GCP_REGION }} --format='value(port)')
          REDIS_URL="redis://${REDIS_HOST}:${REDIS_PORT}/0"

          # This command is intentionally simplified to force an error log
          gcloud run deploy ppt-studio-worker \
            --image=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/ppt-studio-worker:${{ github.sha }} \
            --region=${{ env.GCP_REGION }} \
            --no-allow-unauthenticated \
            --vpc-connector=vpc-connector \
            --set-env-vars="REDIS_URL=$REDIS_URL" \
            --set-secrets="GOOGLE_API_KEY=gemini-api-key:latest" \
            --no-cpu-throttling \
            --command="python" \
            --args="health.py"


  deploy-frontend:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest
    needs: deploy-backend

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Frontend Dependencies
        run: npm ci
        working-directory: ./frontend
      
      - name: Update API URL in Frontend Code
        run: sed -i "s|http://localhost:8000|${{ env.API_URL }}|g" frontend/src/services/api.js
      
      - name: Build React App
        run: npm run build
        working-directory: ./frontend
        
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}'
          projectId: ${{ env.GCP_PROJECT_ID }}