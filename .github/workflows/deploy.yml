name: Deploy to Google Cloud

on:
  push:
    branches:
      - main

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: asia-south1
  REPO_NAME: ppt-studio-repo

jobs:
  deploy-backend:
    name: Build and Deploy Backend
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      
      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Build and Push Docker Image
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/ppt-studio-backend:${{ github.sha }}

      - name: Deploy API Service
        run: |
          gcloud run deploy ppt-studio-api \
            --image=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/ppt-studio-backend:${{ github.sha }} \
            --region=${{ env.GCP_REGION }} \
            --allow-unauthenticated \
            --vpc-connector=vpc-connector \
            --set-env-vars="REDIS_URL=redis://$(gcloud redis instances describe ppt-studio-redis --region=${{ env.GCP_REGION }} --format='value(host,port.string())' | sed 's/ /:/')/0" \
            --set-secrets="GOOGLE_API_KEY=gemini-api-key:latest" \
            --command="gunicorn" \
            --args="-w,4,-k,uvicorn.workers.UvicornWorker,--bind,0.0.0.0:8080,app.main:app"

      - name: Store API URL
        run: echo "API_URL=$(gcloud run services describe ppt-studio-api --platform=managed --region=${{ env.GCP_REGION }} --format='value(status.url)')" >> $GITHUB_ENV

      - name: Deploy Worker Service
        run: |
          gcloud run deploy ppt-studio-worker \
            --image=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/ppt-studio-backend:${{ github.sha }} \
            --region=${{ env.GCP_REGION }} \
            --no-allow-unauthenticated \
            --vpc-connector=vpc-connector \
            --set-env-vars="REDIS_URL=redis://$(gcloud redis instances describe ppt-studio-redis --region=${{ env.GCP_REGION }} --format='value(host,port.string())' | sed 's/ /:/')/0" \
            --set-secrets="GOOGLE_API_KEY=gemini-api-key:latest" \
            --command="bash" \
            --args="-c,'celery -A worker.celery_app.celery worker --loglevel=info & python -m http.server $PORT'"

  deploy-frontend:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest
    needs: deploy-backend

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Frontend Dependencies
        run: npm ci
        working-directory: ./frontend
      
      - name: Update API URL in Frontend Code
        run: sed -i "s|http://localhost:8000|${{ env.API_URL }}|g" frontend/src/services/api.js
      
      - name: Build React App
        run: npm run build
        working-directory: ./frontend
        
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}'
          projectId: ${{ env.GCP_PROJECT_ID }}
